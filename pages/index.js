import Head from 'next/head'
import React from 'react'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Header from '../components/Header'
import Button from '@material-tailwind/react/Button'
import Icon from '@material-tailwind/react/Icon'
import imag from '../assets/doc.png'
import { getSession, useSession } from 'next-auth/client'
import Login from '../components/Login'
import Modal from '@material-tailwind/react/Modal'
import ModalBody from '@material-tailwind/react/ModalBody'
import ModalHeader from "@material-tailwind/react/ModalHeader";
import ModalFooter from '@material-tailwind/react/ModalFooter'
import { db } from '../firebase'
import firebase from "firebase"
import { useCollectionOnce } from "react-firebase-hooks/firestore"
import DocumentRow from '../components/DocumentRow'



export default function Home() {

  const [session] = useSession()
  const [showModal, setShowModal] = React.useState(false)
  const [input, setInput] = React.useState(" ")
  const [snapshot] = useCollectionOnce(
    db.collection('userDocs')
      .doc(session?.user?.email)
      .collection('docs').orderBy('timestamp', 'desc')
  )

  if (!session) return <Login />

  const createDocument = () => {
    if (!input) return

    db.collection('userDocs')
      .doc(session.user.email)
      .collection("docs")
      .add({
        filename: input,
        timestamp: firebase.firestore.FieldValue.serverTimestamp()
      })
    setInput("")
    setShowModal(false)
  }

  const modal = (

    <Modal size="sm" active={showModal} toggler={() => setShowModal(false)}>

      <ModalBody>
        <input type="text"
          value={input}
          onChange={(e) => { setInput(e.target.value) }}
          className="outline-none w-full"
          placeholder="Enter name of document..."
          onKeyDown={(e) => e.key === 'Enter' && createDocument()} />
      </ModalBody>
      <ModalFooter>
        <Button
          color="red"
          buttonType="link"
          onClick={(e) => setShowModal(false)}
          ripple="dark"
        >
          Cancel
        </Button>

        <Button
          color="green"
          onClick={createDocument}
          ripple="light"
        >
          Create
        </Button>
      </ModalFooter>
    </Modal>
  )


  return (
    <div className={styles.container}>
      <Head>
        <title>Google docs clone</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
          rel="stylesheet"
        />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css"
          integrity="sha512-HK5fgLBL+xu6dm/Ii3z4xhlSUyZgTT9tuc/hSrtw6uzJOvgRr2a9jyxxT1ely+B+xFAmJKVSTbpM/CuL7qxO8w=="
          crossOrigin="anonymous"
        />
      </Head>

      <Header />
      {modal}
      <section className="bg-slate-300 pb-10 px-10 w-full h-3/5">
        <div className="max-w-3xl mx-auto">
          <div className="py-6 flex items-stretch flex-col justify-between">
            <div className="flex items-center justify-between">
              <h2 className="text-gray-700 text-lg">Start a new Document</h2>

              <Button
                color="black"
                buttonType="link"
                rounded={true}
                iconOnly={true}
                ripple="dark"
                size="regular"
              >
                <Icon name="more_vert" size="3xl" />
              </Button>
            </div>
            <div className=" relative h-52 w-40 cursor-pointer border-2 hover:border-blue-700 md:inline-flex"
              onClick={() => setShowModal(true)}>

              <Image src={imag}
                layout="fill" />
            </div>
            <p className="ml-2 mt-2 font-semibold text-sm text-gray-700">Blank</p>
          </div>
        </div>
      </section>

      <section className="bg-white px-10 md:px-0 w-full">
        <div className="max-w-3xl mx-auto py-8 text-sm text-gray-700">
          <div className="flex items-center justify-between pb-5">
            <h2 className="font-medium flex-grow ">My documents</h2>
            <p className="mr-12">Date created</p>
            <Icon name="folder" size="3xl" color="grays" />
          </div>

          {snapshot?.docs.map(doc => (
            <DocumentRow key={doc.id}
              id={doc.id}
              filename={doc.data().filename}
              date={doc.data().timestamp} />
          ))}
        </div>
      </section>
    </div>
  )
}

export async function getServerSideProps(context) {

  const session = await getSession(context)

  return {
    props: {
      session
    }
  }
}
